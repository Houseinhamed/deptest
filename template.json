{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "adminUsername": {
      "type": "string",
      "metadata": {
        "description": "Admin username"
      }
    },
    "adminPassword": {
      "type": "securestring",
      "metadata": {
        "description": "Admin password"
      }
    },
    "numerationOfVMs" : {
      "type": "string",
      "minLength": 1,
      "metadata": {
        "description": "Numeration of The VM"
      }
    },
    "imageSKU": {
      "type": "string"
    },
    "vmSize": {
      "type": "string",
      "metadata": {
        "description": "Size of the VM"
      }
    },
    "storageAccountType": {
      "type": "string"
    },
    "vmDataDiskSize": {
      "type": "int"
    },
    "addressPrefix": {
      "type": "string"
    },
    "subnetPrefix": {
      "type": "string"
    },
    "fasePrefix": {
      "type": "string",
      "metadata" : {
          "descreption": "the prefix of the fase."
          }
    },
    "AppName": {
      "type": "string",
      "metadata": {
        "description": "Application Name of the VM"
      }
    }
  },
  "variables": {
    "serviceNamePrefix": "[substring(tolower(parameters('AppName')),0,4)]",
    "faseletter" : "[tolower(substring(tolower(parameters('fasePrefix')),0,1))]",
    "serviceShortName": "[tolower(concat(variables('serviceNamePrefix'), parameters('numerationOfVMs')))]",
    "storageAccountName": "[concat('mov',variables('faseletter'),variables('serviceShortName'), 'stg')]",
    "subnetName": "[concat('mov-',variables('faseletter'),'-',variables('serviceShortName'), '-sub')]",
    "nic2NamePrefix": "[concat('mov-',variables('faseletter'),'-',variables('serviceShortName'), '-nic')]",
    "imagePublisher": "MicrosoftWindowsServer",
    "imageOffer": "WindowsServer",
    "vnetName": "[concat('mov-',variables('faseletter'),'-',variables('serviceShortName'), '-vn')]",
    "vmNamePrefix": "[concat('mov-',variables('faseletter'),'-',variables('serviceShortName'), '-vm')]",
    "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('vnetName'))]",
    "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]"
  },
  "resources": [
    {
      "type": "Microsoft.DevTestLab/schedules",
      "apiVersion": "2016-05-15",
      "name": "[concat('shutdown-computevm-',variables('vmNamePrefix'))]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
          "[concat('Microsoft.Compute/virtualMachines/',concat(variables('vmNamePrefix')))]"
      ],
      "properties": {
          "status": "Enabled",
          "taskType": "ComputeVmShutdownTask",
          "dailyRecurrence": {
              "time": "1900"
          },
          "timeZoneId": "W. Europe Standard Time",
          "notificationSettings": {
              "status": "Disabled",
              "timeInMinutes": 15
          },
          "targetResourceId": "[resourceId('Microsoft.Compute/virtualMachines',concat(variables('vmNamePrefix')))]"
      }
    },
    {
      "type": "Microsoft.Storage/storageAccounts",
      "name": "[variables('storageAccountName')]",
      "apiVersion": "2015-05-01-preview",
      "location": "[resourceGroup().location]",
      "properties": {
        "accountType": "[parameters('storageAccountType')]"
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/virtualNetworks",
      "name": "[variables('vnetName')]",
      "location": "[resourceGroup().location]",
      "properties": {
        "addressSpace": {
          "addressPrefixes": [
            "[parameters('addressPrefix')]"
          ]
        },
        "subnets": [
          {
            "name": "[variables('subnetName')]",
            "properties": {
              "addressPrefix": "[parameters('subnetPrefix')]"
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-05-01-preview",
      "type": "Microsoft.Network/networkInterfaces",
      "name": "[variables('nic2NamePrefix')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Network/virtualNetworks/', variables('vnetName'))]"
      ],
      "properties": {
        "ipConfigurations": [
          {
            "name": "ipconfig1",
            "properties": {
              "privateIPAllocationMethod": "Dynamic",
              "subnet": {
                "id": "[variables('subnetRef')]"
              }
            }
          }
        ]
      }
    },
    {
      "apiVersion": "2015-06-15",
      "type": "Microsoft.Compute/virtualMachines",
      "name": "[variables('vmNamePrefix')]",
      "location": "[resourceGroup().location]",
      "dependsOn": [
        "[concat('Microsoft.Storage/storageAccounts/', variables('storageAccountName'))]",
        "[concat('Microsoft.Network/networkInterfaces/', variables('nic2NamePrefix'))]"
      ],
      "properties": {
        "hardwareProfile": {
          "vmSize": "[parameters('vmSize')]"
        },
        "osProfile": {
          "computerName": "[variables('vmNamePrefix')]",
          "adminUsername": "[parameters('adminUsername')]",
          "adminPassword": "[parameters('adminPassword')]"
        },
        "storageProfile": {
          "imageReference": {
            "publisher": "[variables('imagePublisher')]",
            "offer": "[variables('imageOffer')]",
            "sku": "[parameters('imageSKU')]",
            "version": "latest"
          },
          "osDisk": {
            "name": "osdisk",
            "vhd": {
              "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/','osdisk', '.vhd')]"
            },
            "caching": "ReadWrite",
            "createOption": "FromImage"
          },
          "dataDisks": [
            {
              "name": "Data",
              "diskSizeGB": "[parameters('vmDataDiskSize')]",
              "lun": 0,
              "vhd": {
                "uri": "[concat('http://',variables('storageAccountName'),'.blob.core.windows.net/vhds/','disk02', '.vhd')]"
              },
              "createOption": "Empty"
            }
          ]
        },
        "networkProfile": {
          "networkInterfaces": [
            {
              "properties": {
                "primary": false
              },
              "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nic2NamePrefix'))]"
            }
          ]
        },
        "diagnosticsProfile": {
          "bootDiagnostics": {
            "enabled": "true",
            "storageUri": "[concat('http://',variables('StorageAccountName'),'.blob.core.windows.net')]"
          }
        }
      }
    }
  ]
}